# ===============================================
# EASYVENUE BACKEND APPLICATION CONFIGURATION
# ===============================================

# Application Identity
spring.application.name=EasyVenue-Backend

# ===============================================
# DATABASE CONFIGURATION
# ===============================================

# MySQL Database Connection
spring.datasource.url=jdbc:mysql://localhost:3306/easyvenue?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=Root23

# Connection Pool Settings (HikariCP)
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000

# ===============================================
# JPA/HIBERNATE CONFIGURATION
# ===============================================

# Schema Management - Updates tables automatically without data loss
spring.jpa.hibernate.ddl-auto=update

# SQL Logging - Disabled for cleaner console output
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Database Dialect - Optimizes SQL for MySQL 8
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Entity Scanning - Automatically detect @Entity classes
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

# ===============================================
# SERVER CONFIGURATION
# ===============================================

# Server Port - Backend API runs on port 8080
server.port=8080

# Error Handling - Include detailed error messages in responses
server.error.include-message=always
server.error.include-binding-errors=always

# ===============================================
# CORS CONFIGURATION
# ===============================================

# Frontend Integration - Allow React app access
spring.web.cors.allowed-origins=http://localhost:5173,http://localhost:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true
spring.web.cors.max-age=3600

# ===============================================
# OPTIMIZED LOGGING CONFIGURATION
# ===============================================

# Clean console output - Reduced verbosity for better development experience
logging.level.com.easyvenue.backend=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# Log File Configuration - Detailed logs still saved to file
logging.file.name=logs/easyvenue-backend.log
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Clean Console Pattern - Simplified and readable
logging.pattern.console=%clr(%d{HH:mm:ss}){faint} %clr(%-5level) %clr([%thread]){faint} %clr(%logger{20}){cyan} %clr(:){faint} %m%n

# ===============================================
# PERFORMANCE & MONITORING
# ===============================================

# Actuator Endpoints - Health checks and monitoring
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized

# JSON Serialization - Handle date formats properly
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=UTC

# ===============================================
# DEVELOPMENT SETTINGS
# ===============================================

# Hot Reload - Automatically restart on code changes
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true

# Cache Disabled - Prevent template caching during development
spring.thymeleaf.cache=false
spring.web.resources.cache.period=0
